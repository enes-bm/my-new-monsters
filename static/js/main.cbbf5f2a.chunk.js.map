{"version":3,"sources":["components/card/card-components.jsx","components/card-lists/card-list-components.jsx","components/search/search-components.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","user","this","filteredMonsters","filter","toLowerCase","includes","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+TAGaA,EAAO,SAAAC,GAChB,OAAQ,sBAAKC,UAAU,iBAAf,UACJ,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACtB,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,YCFbC,EAAW,SAAAR,GAEpB,OACA,qBAAKC,UAAU,YAAf,SACKD,EAAMS,SAASC,KAAI,SAAAN,GAChB,OAAO,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCPzBM,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,aAAf,OACxB,uBACOZ,UAAU,SACVa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MC+CHG,E,kDAhDb,aAAe,IAAD,8BACZ,gBAgBFH,aAAe,SAACI,GACd,EAAKC,SAAS,CAACC,YAAaF,EAAEG,OAAOC,SAfrC,EAAKC,MAAQ,CACXb,SAAS,GACTU,YAAa,IALH,E,qDAWd,WAAsB,IAAD,OACnBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAI,EAAKT,SAAS,CAACT,SAAUkB,S,oBAQzC,WAAU,IAAD,EACyBC,KAAKN,MAA9Bb,EADA,EACAA,SAAUU,EADV,EACUA,YACXU,EAAmBpB,EAASqB,QAAO,SAAA1B,GAAO,OAC9CA,EAAQE,KAAKyB,cAAcC,SAASb,EAAYY,kBAElD,OACE,sBAAK9B,UAAU,MAAf,UAEE,2CACA,cAAC,EAAD,CACAW,YAAY,qBACZC,aAAce,KAAKf,eAEnB,cAAC,EAAD,CAAUJ,SAAUoB,W,GApCVI,IAAMC,WCMTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.cbbf5f2a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./card.styles.css\";\r\n\r\nexport const Card = props => {\r\n    return (<div className=\"card-container\">\r\n        <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}/>\r\n        <h2>{props.monster.name}</h2>\r\n        <p>{props.monster.email}</p>\r\n    </div>);\r\n}","import React from \"react\";\r\nimport \"./card-list.styles.css\";\r\nimport  {Card} from \"../card/card-components\";\r\n\r\n\r\nexport const CardList = props => {\r\n    \r\n    return (\r\n    <div className=\"card-list\">\r\n        {props.monsters.map(monster => {\r\n            return <Card key={monster.id} monster={monster} />})\r\n            }\r\n    </div>);\r\n}","import React from \"react\";\r\nimport \"./search-box.styles.css\";\r\n\r\nexport const SearchBox = ({placeholder, handleChange}) => \r\n(<input \r\n        className=\"search\"\r\n        type=\"search\"\r\n        placeholder={placeholder}\r\n        onChange={handleChange}\r\n    />);\r\n\r\n\r\n    \r\n\r\n","import './App.css';\nimport React from \"react\";\nimport {CardList} from \"./components/card-lists/card-list-components\";\nimport {SearchBox} from \"./components/search/search-components\";\n\n\nclass App extends React.Component{\n  constructor() {\n    super();\n    \n    this.state = {\n      monsters:[],\n      searchField: \"\"\n    };\n\n\n  }\n\n  componentDidMount()  {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n    .then(response => response.json())\n    .then(user => this.setState({monsters: user}));\n  };\n  \n  handleChange = (e) => {\n    this.setState({searchField: e.target.value});\n  }\n\n\n  render() {\n    const {monsters, searchField} = this.state;\n    const filteredMonsters = monsters.filter(monster =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase()));\n\n    return (\n      <div className=\"App\">\n\n        <h1>Monsters </h1>\n        <SearchBox \n        placeholder=\"searching monsters\" \n        handleChange={this.handleChange}/>\n\n        <CardList monsters={filteredMonsters}></CardList>\n      </div>\n    );\n  \n  };\n\n\n\n};\n\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}